{
  "openapi": "3.0.4",
  "info": {
    "title": "BG Report Management API",
    "version": "v1"
  },
  "paths": {
    "/api/lims/reports/{hospitalCode}/{id}": {
      "get": {
        "tags": [
          "LimsReports"
        ],
        "summary": "Gets a report with id and hospital code",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hospitalCode",
            "in": "path",
            "description": "Hospital Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAllGenes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeCPTValues",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includePatientInterpretation",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeRiskSummary",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeScreenDiseases",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeStringFormatResults",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchPdfWording",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "useCorrectDOBFormat",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchJsonPdfOrdering",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchQuestJsonPdfFormat",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "relatedHospitalCodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "returnDiscreteData",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/lims/reports/{id}": {
      "get": {
        "tags": [
          "LimsReports"
        ],
        "summary": "Gets a report with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeAllGenes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeCPTValues",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includePatientInterpretation",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeRiskSummary",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeScreenDiseases",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeStringFormatResults",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchPdfWording",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "useCorrectDOBFormat",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchJsonPdfOrdering",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchQuestJsonPdfFormat",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "relatedHospitalCodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "returnDiscreteData",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reports/generate-reports-async": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "generate batch reports asynchronously",
        "parameters": [
          {
            "name": "sampleIds",
            "in": "query",
            "description": "list of sample Ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "the lab director userId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStatus",
            "in": "query",
            "description": "status of the report",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.ReportStatus"
            }
          },
          {
            "name": "signatureStep",
            "in": "query",
            "description": "role of signout user",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.SignatureRole"
            }
          },
          {
            "name": "newWorkFlow",
            "in": "query",
            "description": "If it's for new GA workflow",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Reports/signout": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "generate batch sign out reports",
        "parameters": [
          {
            "name": "sampleIds",
            "in": "query",
            "description": "list of sample Ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userid",
            "in": "query",
            "description": "the lab director userId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newWorkFlow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/api/Reports/signout-async": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "sign out batch samples asynchronously",
        "parameters": [
          {
            "name": "sampleIds",
            "in": "query",
            "description": "list of sample Ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userid",
            "in": "query",
            "description": "the lab director userId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStatus",
            "in": "query",
            "description": "status of the report",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.ReportStatus"
            }
          },
          {
            "name": "signatureStep",
            "in": "query",
            "description": "role of signout user",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.SignatureRole"
            }
          },
          {
            "name": "newWorkFlow",
            "in": "query",
            "description": "indicating if it's called by the new GA workflow",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Reports/signature": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Check to see if signature is valid",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "UserId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labId",
            "in": "query",
            "description": "LabId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Reports": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate Report",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "user Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStatus",
            "in": "query",
            "description": "report status",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.ReportStatus"
            }
          },
          {
            "name": "signatureStep",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.SignatureRole"
            }
          },
          {
            "name": "newWorkFlow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "WGS report DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BG.Platform.Models.ReportManagement.AddReportDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get all Reports.",
        "operationId": "GetAllReports",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BG.Platform.Models.ReportManagement.ReportDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reports/reporttemplates": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets all report templates",
        "operationId": "GetAllReportTemplates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BG.Platform.Models.ReportManagement.BGReportTemplateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reports/preview": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets preview of report",
        "parameters": [
          {
            "name": "caseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sampleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sampleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "user Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStatus",
            "in": "query",
            "description": "report status",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.ReportStatus"
            }
          },
          {
            "name": "newWorkFlow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Reports/templates": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Template Options for a Report",
        "parameters": [
          {
            "name": "templateType",
            "in": "query",
            "description": "Template Type",
            "schema": {
              "$ref": "#/components/schemas/BG.Enums.ResultTemplateType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reports2/{sampleId}/Preview": {
      "post": {
        "tags": [
          "Reports2"
        ],
        "parameters": [
          {
            "name": "sampleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Reports2/{sampleId}/Signout": {
      "post": {
        "tags": [
          "Reports2"
        ],
        "parameters": [
          {
            "name": "sampleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BG.Enums.ReportStatus": {
        "enum": [
          "InitialReport",
          "FinalReport"
        ],
        "type": "string"
      },
      "BG.Enums.ResultTemplateType": {
        "enum": [
          "Interpretation",
          "Recommendations",
          "Summary"
        ],
        "type": "string"
      },
      "BG.Enums.SignatureRole": {
        "enum": [
          "MedicalDirector",
          "LabDirector",
          "GeneticCounselor"
        ],
        "type": "string"
      },
      "BG.Platform.Models.ReportManagement.AddReportDTO": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "string",
            "nullable": true
          },
          "sampleId": {
            "type": "integer",
            "format": "int32"
          },
          "sampleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BG.Platform.Models.ReportManagement.BGReportTemplateDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "createdOnDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "rowVersion": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "templateTestCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BG.Platform.Models.ReportManagement.BGTemplateTestCodeDTO"
            },
            "nullable": true
          },
          "templateValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BG.Platform.Models.ReportManagement.BGTemplateTestCodeDTO": {
        "type": "object",
        "properties": {
          "bgReportTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "testCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BG.Platform.Models.ReportManagement.ReportDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "createdOnDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "rowVersion": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}